#!/usr/bin/env python

import subprocess
import sys
import os

#-----------------------------------------
def run_cmd(cmd):
    """ 'cmd' could be a list. eg ["echo", "Hello World!"] """
    try:
        ret = subprocess.check_output(
            cmd,
            stderr=subprocess.STDOUT,  # No reason for this line?
            shell= True)
    except subprocess.CalledProcessError, e:
        print >>sys.stderr, "Execution failed:", e
    else:
        return ret


#-----------------------------------------
def in2array(response):
    # Get rid of the last '\n'.
    if response and response[-1] == '\n':
        ret = response[:-1]
        return ret.split('\n')
    else:
        return []

#- Main ---------------------------------
# Typical input line: "2013 7 15 Dimma-65F15  61 34 100 35 -1 33"
# Typical file that results:
unescaped_file_template =\
"mdcal-r-eng.php?year=%s&month=%s&day=%s&lat_deg=%s&lat_min=%s&lat_dir=1&lon_deg=%s&lon_min=%s&lon_dir=-1"
file_name_template =\
"mdcal-r-eng.php\?year\=%s\&month\=%s\&day\=%s\&lat_deg\=%s\&lat_min\=%s\&lat_dir\=1\&lon_deg\=%s\&lon_min\=%s\&lon_dir\=-1"

url_template =\
"http://geomag.nrcan.gc.ca/calc/mdcal-r-eng.php\?year=%s\&month=%s\&day=%s\&lat_deg=%s\&lat_min=%s\&lat_dir=1\&lon_deg=%s\&lon_min=%s\&lon_dir=-1"

count = 0
target_line = "Calculated magnetic declination:"
for line in sys.stdin:
    if len(line) > 0 and line[-1:]=='\n':
        line = line[:-1]
    # print "#", line
    if (not line) or (line[0] == "#"):
        # print "Skipping line"
        continue
    fields = line.split()
    year = fields[0]
    month = fields[1]
    day = fields[2]
    location = fields[3]
    lat_deg = fields[4]
    lat_min = fields[5]
    lon_deg = fields[6]
    lon_min = fields[7]
    d = fields[8]
    m = fields[9]
    if d[0] == '-':
        neg = True
        d = d[:]
    else:
        neg = False
    mm = int(d) * 60 + int(m)
    if neg:
        mm = mm * -1

    data_tuple = (year, month, day, lat_deg, lat_min, lon_deg, lon_min, )

    file_name = unescaped_file_template%data_tuple
    request = url_template%data_tuple
    #print "Calling wget for %s/%s/%s %sdegrees %s'N %sdegrees %s'W"%data_tuple
    cmd = "wget %s"%(request, )
    result = run_cmd(cmd)
    try:
        #print "looking to open file named:"
        #print file_name
        f = open(file_name, "r")
        page = f.read()
        f.close()
        os.remove(file_name)
    except IOError, e:
        print "No file found for %sd %sm LAT / %sd %sm LONG, %s %s %s"%\
        (lat_deg, lat_min, lon_deg, lon_min, year, month, day, )
        print "..or unable to delete it."
    else:
        #cmd = "rm %s"%(file_name, )
        #run_cmd(cmd)
        i = page.find(target_line)
        page = page[(i + len(target_line)):]
        i = page.find('>')
        page = page[i+1:]
        j = page.find('&deg;')
        deg = page[:j]
        i = j + len('&deg;')
        j = page.find('<')
        mi = page[i:j]
        count +=1
        print "%2s %18s %2sd %9s @ %2sd %2s'N %3sd %2s'W on %4s/%2s/%2s"%\
        (count, location, deg, mi, lat_deg, lat_min, lon_deg, lon_min, 
        year, month, day, )


